export enum Method {
	Get = "GET",
	Post = "POST",
	Put = "PUT",
	// Patch = "PATCH",
	Delete = "DELETE",
	// Head = "HEAD",
	// Options = "OPTIONS",
	// Connect = "CONNECT",
}

export enum StatusCode {
	Continue = 100,
	SwitchingProtocols = 101,
	Ok = 200,
	Created = 201,
	Accepted = 202,
	NonAuthoritativeInformation = 203,
	NoContent = 204,
	ResetContent = 205,
	PartialContent = 206,
	MultipleChoices = 300,
	MovedPermanently = 301,
	Found = 302,
	SeeOther = 303,
	NotModified = 304,
	UseProxy = 305,
	TemporaryRedirect = 307,
	BadRequest = 400,
	Unauthorized = 401,
	PaymentRequired = 402,
	Forbidden = 403,
	NotFound = 404,
	MethodNotAllowed = 405,
	NotAcceptable = 406,
	ProxyAuthenticationRequired = 407,
	RequestTimeout = 408,
	Conflict = 409,
	Gone = 410,
	LengthRequired = 411,
	PreconditionFailed = 412,
	RequestEntityTooLarge = 413,
	RequestUriTooLong = 414,
	UnsupportedMediaType = 415,
	RequestedRangeNotSatisfiable = 416,
	ExpectationFailed = 417,
	ImATeapot = 418,
	UnprocessableEntity = 422,
	TooManyRequests = 429,
	InternalServerError = 500,
	NotImplemented = 501,
	BadGateway = 502,
	ServiceUnavailable = 503,
	GatewayTimeout = 504,
	HttpVersionNotSupported = 505,
}

// Keep this sorted
export enum Header {
	Accept = "Accept",
	AcceptEncoding = "Accept-Encoding",
	AcceptLanguage = "Accept-Language",
	AccessControlAllowCredentials = "Access-Control-Allow-Credentials",
	AccessControlAllowHeaders = "Access-Control-Allow-Headers",
	AccessControlAllowMethods = "Access-Control-Allow-Methods",
	AccessControlAllowOrigin = "Access-Control-Allow-Origin",
	AccessControlExposeHeaders = "Access-Control-Expose-Headers",
	AccessControlMaxAge = "Access-Control-Max-Age",
	AccessControlRequestHeaders = "Access-Control-Request-Headers",
	AccessControlRequestMethod = "Access-Control-Request-Method",
	Authorization = "Authorization",
	CacheControl = "Cache-Control",
	CacheStatus = "Cache-Status",
	Connection = "Connection",
	ContentDisposition = "Content-Disposition",
	ContentEncoding = "Content-Encoding",
	ContentLength = "Content-Length",
	ContentSecurityPolicy = "Content-Security-Policy",
	ContentSecurityPolicyReportOnly = "Content-Security-Policy-Report-Only",
	ContentType = "Content-Type",
	Cookie = "Cookie",
	ETag = "ETag",
	Forwarded = "Forwarded",
	FrameOptions = "X-Frame-Options",
	Host = "Host",
	IfNoneMatch = "If-None-Match",
	Location = "Location",
	Origin = "Origin",
	ReferrerPolicy = "Referrer-Policy",
	ServerTiming = "Server-Timing",
	StrictTransportSecurity = "Strict-Transport-Security",
	TimingAllowOrigin = "Timing-Allow-Origin",
	Trailer = "Trailer",
	TransferEncoding = "Transfer-Encoding",
	UserAgent = "User-Agent",
	RetryAfter = "Retry-After",

	XShopId = "X-ShopId",
	XHaravanApiCallLimit = "X-Haravan-Api-Call-Limit",
	XClientId = "X-ClientId",
}

export enum CacheControl {
	NoCache = "no-cache",
	NoStore = "no-store",
	MustRevalidate = "must-revalidate",
	MaxAge = "max-age",
}
